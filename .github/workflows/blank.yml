# This is a basic workflow to help you get started with Actions

name: Increment Version

# 実行されるタイミング
on:
  # `main`にPRが作成された or PRにラベルが付けられた
  pull_request:
    branches: 
      - main
    types:
      - opened
      - labeled

# 実行内容
jobs:
  increment_version:
    name: バージョン変更

    runs-on: ubuntu-latest

    env:
      APP_NAME: AutoVersionIncrementWithGitHubAction

    steps:
      - name: リポジトリの内容を取得？
        uses: actions/checkout@v2
    
      - name: リリースラベルが付いているか判定
        id: check_release_label
        run: |
          PR_LABELS=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels" | \
          jq -r '.[].name')
          HAS_RELEASE_LABEL=false
          if [[ $PR_LABELS == *"リリース"* ]]; then
            HAS_RELEASE_LABEL=true
          fi
          echo "has_release_label=$HAS_RELEASE_LABEL" >> $GITHUB_OUTPUT

      - name: PRのタイトルを取得
        id: pr_title
        if: ${{ steps.check_release_label.outputs.has_release_label == 'true' }}
        run: |
          PR_TITLE=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" | \
          jq -r '.title')
          echo 
          echo "pr_title=$PR_TITLE" >> $GITHUB_OUTPUT

      - name: project.pbxprojからMARKETING_VERSIONを取得
        id: version
        if: ${{ steps.check_release_label.outputs.has_release_label == 'true' }}
        run: |
          MARKETING_VERSION=$(sed -n '/MARKETING_VERSION/{s/MARKETING_VERSION = //;s/;//;s/^[[:space:]]*//;p;q;}' ${{ env.APP_NAME }}.xcodeproj/project.pbxproj)
          echo "marketing_version=$MARKETING_VERSION" >> $GITHUB_OUTPUT

      - name: PRタイトルのバージョンとMARKETING_VERSIONを比較
        id: comparison
        if: ${{ steps.check_release_label.outputs.has_release_label == 'true' }}
        run: |
          PR_TITLE=$(echo ${{ steps.pr_title.outputs.pr_title }})
          MARKETING_VERSION=$(echo ${{ steps.version.outputs.marketing_version }})

          echo $PR_TITLE
          echo $MARKETING_VERSION

          if [[ $PR_TITLE =~ ^[0-9]+\.[0-9]+\.[0-9]+$ && $MARKETING_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            PR_VERSION_NEW=(${PR_TITLE//./ })
            MARKETING_VERSION_NEW=(${MARKETING_VERSION//./ })
            echo $PR_VERSION_NEW
            echo $MARKETING_VERSION_NEW
          else
            echo "バージョン番号がセマンティックバージョニング形式ではありません"
          fi

      - name: 出力用
        run: |
          echo ${{ steps.check_release_label.outputs.has_release_label }}
          echo ${{ steps.pr_title.outputs.pr_title }}
          echo ${{ steps.version.outputs.marketing_version }}
          echo ${{ env.APP_NAME }}
